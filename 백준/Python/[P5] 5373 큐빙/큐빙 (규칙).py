'''
                8 7 6
                5 4 3
                2 1 0
              ---------
        2 5 8 | 0 1 2 | 8 7 6
        1 4 7 | 3 4 5 | 5 4 3
        0 3 6 | 6 7 8 | 2 1 0
              ---------
                6 3 0
                7 4 1
                8 5 2
              ---------
                2 5 8
                1 4 7
                0 3 6
'''

import sys
input = sys.stdin.readline

# 테스트 케이스 수
for _ in range(int(input())):
    # 큐브 (윗면, 아랫면, 앞면, 뒷면, 왼쪽, 오른쪽)
    u, d, f, b, l, r = ['w'] * 9, ['y'] * 9, ['r'] * 9, ['o'] * 9, ['g'] * 9, ['b'] * 9

    # 돌린 횟수
    n = int(input())

    # 돌린 면, 방향
    for info in input().split():
        # 면, 방향
        I, D = info[0], info[1]

        # 시계 방향 회전
        if D == '+':
            # 회전하는 면과 영향받는 4개의 면
            x, y1, y2, y3, y4 = {'U': (u, f, r, b, l), 'D': (d, r, f, l, b), 'F': (f, l, d, r, u),
                                 'B': (b, d, l, u, r), 'L': (l, u, b, d, f), 'R': (r, b, u, f, d)}[I]

            # 회전하는 면
            x[0], x[2], x[8], x[6], x[1], x[5], x[7], x[3] = x[6], x[0], x[2], x[8], x[3], x[1], x[5], x[7]

            # 영향받는 4개의 면
            y1[0], y1[3], y1[6], y2[8], y2[5], y2[2], y3[2], y3[1], y3[0], y4[6], y4[7], y4[8] = y2[8], y2[5], y2[2], y3[2], y3[1], y3[0], y4[6], y4[7], y4[8], y1[0], y1[3], y1[6]

        # 반시계 방향 회전
        else:
            # 회전하는 면과 영향받는 4개의 면
            x, y1, y2, y3, y4 = {'U': (u, f, l, b, r), 'D': (d, r, b, l, f), 'F': (f, l, u, r, d),
                                 'B': (b, d, r, u, l), 'L': (l, u, f, d, b), 'R': (r, b, d, f, u)}[I]

            # 회전하는 면
            x[0], x[2], x[8], x[6], x[1], x[5], x[7], x[3] = x[2], x[8], x[6], x[0], x[5], x[7], x[3], x[1]

            # 영향받는 4개의 면
            y1[0], y1[3], y1[6], y2[6], y2[7], y2[8], y3[2], y3[1], y3[0], y4[8], y4[5], y4[2] = y2[6], y2[7], y2[8], y3[2], y3[1], y3[0], y4[8], y4[5], y4[2], y1[0], y1[3], y1[6]

    # 윗면 출력
    print(''.join(u[:3]))
    print(''.join(u[3:6]))
    print(''.join(u[6:]))
